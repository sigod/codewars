fn f(x: f64) -> f64 {
	x / 2.0
		- x.powi(2) / 8.0
		+ x.powi(3) / 16.0
		- (5.0 * x.powi(4)) / 128.0
		+ (7.0 * x.powi(5)) / 256.0
		- (21.0 * x.powi(6)) / 1024.0
		+ (33.0 * x.powi(7)) / 2048.0
		- (429.0 * x.powi(8)) / 32768.0
		+ (715.0 * x.powi(9)) / 65536.0
		- (2431.0 * x.powi(10)) / 262144.0
		+ (4199.0 * x.powi(11)) / 524288.0
		- (29393.0 * x.powi(12)) / 4194304.0
		+ (52003.0 * x.powi(13)) / 8388608.0
		- (185725.0 * x.powi(14)) / 33554432.0
		+ (334305.0 * x.powi(15)) / 67108864.0
		- (9694845.0 * x.powi(16)) / 2147483648.0
		+ (17678835.0 * x.powi(17)) / 4294967296.0
		- (64822395.0 * x.powi(18)) / 17179869184.0
		+ (119409675.0 * x.powi(19)) / 34359738368.0
		- (883631595.0 * x.powi(20)) / 274877906944.0
		+ (1641030105.0 * x.powi(21)) / 549755813888.0
		- (6116566755.0 * x.powi(22)) / 2199023255552.0
		+ (11435320455.0 * x.powi(23)) / 4398046511104.0
		- (171529806825.0 * x.powi(24)) / 70368744177664.0
		+ (322476036831.0 * x.powi(25)) / 140737488355328.0
		- (1215486600363.0 * x.powi(26)) / 562949953421312.0
		+ (2295919134019.0 * x.powi(27)) / 1125899906842624.0
		- (17383387729001.0 * x.powi(28)) / 9007199254740992.0
		+ (32968493968795.0 * x.powi(29)) / 18014398509481984.0
		- (125280277081421.0 * x.powi(30)) / 72057594037927936.0
		+ (238436656380769.0 * x.powi(31)) / 144115188075855872.0
		- (14544636039226909.0 * x.powi(32)) / 9223372036854775808.0
		+ (27767032438524099.0 * x.powi(33)) / 18446744073709551616.0
		- (106168065206121555.0 * x.powi(34)) / 73786976294838206464.0
}

fn assert_fuzzy_equals(actual: f64, expected: f64) {
	let merr = 1.0e-12;
	let inrange =
		if expected == 0.0 {
			(actual.abs() <= merr)
		} else {
			((actual - expected).abs() / expected <= merr)
		};
	if inrange == false {
		println!("Expected value must be near: {:e} but was:{:e}", expected, actual);
	} else {
		//println!("....... GOOD\n");
	}
	//println!("{}", inrange);
	assert_eq!(true, inrange)
}

#[test]
fn basic_tests() {
	assert_fuzzy_equals(f(2.6e-08), 1.29999999155e-08);
	assert_fuzzy_equals(f(1.4e-09), 6.999999997549999e-10);
}
